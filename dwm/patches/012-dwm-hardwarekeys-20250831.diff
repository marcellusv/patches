Index: dwm/config.def.h
===================================================================
--- dwm.orig/config.def.h
+++ dwm/config.def.h
@@ -1,4 +1,5 @@
 /* See LICENSE file for copyright and license details. */
+#include <X11/XF86keysym.h>
 
 /* appearance */
 static const unsigned int borderpx  = 1;        /* border pixel of windows */
@@ -18,6 +19,14 @@ static const char *colors[][3]      = {
 	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
 };
 
+/* volume keys */
+static const char *volup[]     = { "/usr/bin/pactl", "set-sink-volume", "@DEFAULT_SINK@", "+5%",    NULL };
+static const char *voldown[]   = { "/usr/bin/pactl", "set-sink-volume", "@DEFAULT_SINK@", "-5%",    NULL };
+static const char *volmute[]   = { "/usr/bin/pactl", "set-sink-mute",   "@DEFAULT_SINK@", "toggle", NULL };
+static const char *playpause[] = {"/usr/bin/playerctl", "play-pause", NULL };
+static const char *playnext[]  = {"/usr/bin/playerctl", "play-pause", NULL };
+static const char *playprev[]  = {"/usr/bin/playerctl", "play-pause", NULL };
+
 /* tagging */
 static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
 
@@ -29,6 +38,7 @@ static const Rule rules[] = {
 	/* class      instance    title       tags mask     isfloating   monitor */
 	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
 	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
+	{ "Librewolf",NULL,       NULL,       1 << 8,       0,           -1 },
 };
 
 /* layout(s) */
@@ -95,6 +105,12 @@ static const Key keys[] = {
 	TAGKEYS(                        XK_8,                      7)
 	TAGKEYS(                        XK_9,                      8)
 	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+	{0,           XF86XK_AudioRaiseVolume,    spawn,           {.v = volup } },
+	{0,           XF86XK_AudioLowerVolume,    spawn,           {.v = voldown } },
+	{0,           XF86XK_AudioMute,           spawn,           {.v = volmute } },
+	{0,           XF86XK_AudioPlay,           spawn,           {.v = playpause } },
+	{0,           XF86XK_AudioNext,           spawn,           {.v = playnext } },
+	{0,           XF86XK_AudioPrev,           spawn,           {.v = playprev } },
 };
 
 /* button definitions */
